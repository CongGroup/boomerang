enclave {
    from "sgx_tsgxssl.edl" import *;
    from "sgx_pthread.edl" import *;

    trusted { 
    public void ecall_handle_batch([user_check]uint8_t** in_data, size_t batch_num, size_t pkt_size, [out,size=out_size]uint8_t* out_data, size_t out_size, [out,count=lens_size]size_t* lens_data, size_t lens_size, size_t bnode_num, size_t B, uint8_t enode_id, uint64_t round_num,size_t use_B_padding);
    public void ecall_handle_blocks([user_check]uint8_t** in_data, size_t pkt_num, size_t pkt_size, [out,size=out_size]uint8_t* out_data, size_t out_size,size_t batch_num,[user_check]const uint64_t **to_R_list,[out,count=1]size_t* valid_out_data_size);

    public void ecall_set_worker_thread_num(size_t worker_thread_num);
    public void ecall_start_worker_loop(size_t thread_id);
    };

    untrusted {
		void ocall_print_string([in, string] const char *str);

    void ocall_set_time_point();
		void ocall_probe_time();
		void ocall_print_time();
    };

};
